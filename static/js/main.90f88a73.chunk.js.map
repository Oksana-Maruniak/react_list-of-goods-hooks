{"version":3,"sources":["App.tsx","components/GoodCard/GoodCard.tsx","components/GoodList/GoodList.tsx","index.tsx"],"names":["Sortfield","GoodGard","good","GoodList","goods","map","goodsFromServer","App","useState","sortField","setSortField","isReveresed","setIsReversed","visibleGoods","preparedGoods","sort","good1","good2","name","localeCompare","length","reverse","getPreparedGoods","className","onClick","type","cn","prevState","ReactDOM","render","document","getElementById"],"mappings":"6KAoBKA,E,4ECRUC,EANmB,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAChC,oBAAI,UAAQ,OAAZ,SACGA,KCDQC,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvC,6BACGA,EAAMC,KAAI,SAAAH,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,SFHpBI,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGN,K,YAAAA,E,iBAAAA,M,KAgCE,IAAMO,EAAgB,WAC3B,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAqCF,oBAAS,GAA9C,mBAAOG,EAAP,KAAoBC,EAApB,KAEMC,EA/BR,SACET,EADF,GAEa,IADQK,EACT,EADSA,UAAWE,EACpB,EADoBA,YAExBG,EAAa,YAAOV,GAqB1B,OAnBIK,GACFK,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQR,GACN,KAAKT,EAAUkB,KACb,OAAOF,EAAMG,cAAcF,GAE7B,KAAKjB,EAAUoB,OACb,OAAOJ,EAAMI,OAASH,EAAMG,OAE9B,QACE,OAAO,MAKXT,GACFG,EAAcO,UAGTP,EAOcQ,CACnBhB,EAAiB,CAAEG,YAAWE,gBAUhC,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UAEE,wBACEC,QAAS,kBAAMd,EAAaV,EAAUkB,OACtCO,KAAK,SACLF,UAAWG,IACT,SACA,UACA,CAAE,WAAYjB,IAAcT,EAAUkB,OAN1C,iCAaA,wBACEM,QAAS,kBAAMd,EAAaV,EAAUoB,SACtCK,KAAK,SACLF,UAAWG,IACT,SACA,aACA,CAAE,WAAYjB,IAAcT,EAAUoB,SAN1C,4BAYA,wBACEI,QArCQ,kBAAMZ,GAAc,SAAAe,GAAS,OAAKA,MAsC1CF,KAAK,SACLF,UAAWG,IACT,SACA,aACA,CAAE,YAAaf,IANnB,sBAYEF,GAAaE,IACb,wBACEa,QAhDI,WACZd,EAAa,IACbE,GAAc,IA+CNa,KAAK,SACLF,UAAU,4BAHZ,sBAWJ,cAAC,EAAD,CAAUnB,MAAOS,QGrHvBe,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.90f88a73.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport cn from 'classnames';\nimport './App.scss';\nimport { GoodList } from './components/GoodList/GoodList';\nimport { Params } from './types/Params';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum Sortfield {\n  name = 'name',\n  length = 'length',\n}\n\nfunction getPreparedGoods(\n  goods: string[], { sortField, isReveresed }: Params,\n): string[] {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case Sortfield.name:\n          return good1.localeCompare(good2);\n\n        case Sortfield.length:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReveresed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReveresed, setIsReversed] = useState(false);\n\n  const visibleGoods = getPreparedGoods(\n    goodsFromServer, { sortField, isReveresed },\n  );\n\n  const reverse = () => setIsReversed(prevState => !prevState);\n\n  const reset = () => {\n    setSortField('');\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n\n        <button\n          onClick={() => setSortField(Sortfield.name)}\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            { 'is-light': sortField !== Sortfield.name },\n          )}\n\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortField(Sortfield.length)}\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            { 'is-light': sortField !== Sortfield.length },\n          )}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={reverse}\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-warning',\n            { 'is-light': !isReveresed },\n          )}\n        >\n          Reverse\n        </button>\n\n        {(sortField || isReveresed) && (\n          <button\n            onClick={reset}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <GoodList goods={visibleGoods} />\n    </div>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  good: string;\n};\n\nconst GoodGard: React.FC<Props> = ({ good }) => (\n  <li data-cy=\"Good\">\n    {good}\n  </li>\n);\n\nexport default GoodGard;\n","import React from 'react';\nimport GoodGard from '../GoodCard/GoodCard';\n\ntype Props = {\n  goods: string[];\n};\n\nexport const GoodList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <GoodGard good={good} key={good} />\n    ))}\n  </ul>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}